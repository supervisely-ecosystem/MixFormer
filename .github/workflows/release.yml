name: Release
run-name: Release version "${{ github.event.release.tag_name }}"
on:
  release:
    types: [published]
    branches:
      - main
      - master

jobs:
  Supervisely-Release:
    if: "!github.event.release.prerelease"
    uses: supervisely-ecosystem/workflows/.github/workflows/common.yml@master
    secrets:
      SUPERVISELY_DEV_API_TOKEN: "${{ secrets.SUPERVISELY_DEV_API_TOKEN }}"
      SUPERVISELY_PRIVATE_DEV_API_TOKEN: "${{ secrets.SUPERVISELY_PRIVATE_DEV_API_TOKEN }}"
      SUPERVISELY_PROD_API_TOKEN: "${{ secrets.SUPERVISELY_PROD_API_TOKEN }}"
      GH_ACCESS_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
    with:
      SUPERVISELY_SERVER_ADDRESS: "${{ vars.SUPERVISELY_DEV_SERVER_ADDRESS }}"
      SUPERVISELY_PROD_SERVER_ADDRESS: "${{ vars.SUPERVISELY_PROD_SERVER_ADDRESS }}"
      SLUG: "${{ github.repository }}"
      RELEASE_VERSION: "${{ github.event.release.tag_name }}"
      RELEASE_DESCRIPTION: "${{ github.event.release.name }}"
      RELEASE_TYPE: "release"
      SUBAPP_PATHS: "serve/serve"

  GPU-Cloud-image-build:
    needs: Supervisely-Release
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: supervisely/mixformer-gpu-cloud
      DOCKERFILE_PATH: gpu-cloud/Dockerfile
    steps:
      - name: Validate tag
        run: |
          TAG_NAME="${{ github.event.release.tag_name }}"
          if [[ ! "$TAG_NAME" =~ ^v?[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "Tag name should be in format v1.2.3 or 1.2.3"
            exit 1
          fi

          CLEANED_TAG="${TAG_NAME#v}"
          IMAGE_TAG="${{ env.IMAGE_NAME }}:${CLEANED_TAG}"
          echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV
          echo "Validated and set image tag: $IMAGE_TAG"

      - name: Checkout
        uses: actions/checkout@v4

      - name: Delete .git folder
        run: |
          rm -rf .git

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME_COMMUNITY }}
          password: ${{ secrets.DOCKER_TOKEN_COMMUNITY }}

      - name: Login to Docker Supervisely Enterprise
        uses: docker/login-action@v3
        with:
          registry: ${{ secrets.DOCKER_ENTERPRISE_REGISTRY }}
          username: ${{ secrets.DOCKER_USERNAME_ENTERPRISE }}
          password: ${{ secrets.DOCKER_PASSWORD_ENTERPRISE }}

      - name: Build and Push
        uses: docker/build-push-action@v5
        with:
          push: true
          load: true
          file: ${{ env.DOCKERFILE_PATH }}
          tags: ${{ env.IMAGE_TAG }}